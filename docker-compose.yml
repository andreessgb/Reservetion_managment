version: '3.8'

services:
  # Servicio Redis
  redis_server:
    image: redis:latest
    container_name: redis_server
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend

  # Servicio MySQL
  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend

  # Servicio Laravel
  laravel_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    ports:
      - "8000:8000"
    volumes:
      - .:/var/www
    environment:
      - REDIS_HOST=redis_server
      - DB_CONNECTION=mysql
      - DB_HOST=mysql_db
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel_user
      - DB_PASSWORD=secret
    depends_on:
      - redis_server
      - mysql_db
    networks:
      - backend
    command: bash -c "php artisan serve --host=0.0.0.0 --port=8000 && npm run dev"

  # Servicio Python Worker
  python_worker:
    build:
      context: . 
      dockerfile: python/Dockerfile
    container_name: python_worker
    volumes:
      - ./python:/app
    working_dir: /app
    networks:
      - backend
    depends_on:
      - redis_server
      - mysql_db
    command: python worker.py

  # Servicio Adminer (Gestor de base de datos)
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8081:8080"
    depends_on:
      - mysql_db
    networks:
      - backend

# Vol√∫menes para persistir datos
volumes:
  redis_data:
  mysql_data:

# Redes internas para que los servicios se puedan comunicar
networks:
  backend:
    driver: bridge